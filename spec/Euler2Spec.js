var solution = require('../Js/Euler2');

/*
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

describe('Euler2', function(){
    it('should return [1, 2, 3, 5, 8, 13] when max value is 14', function(){
        var expected = [1, 2, 3, 5, 8, 13];
        var actual = solution.fibonacci(14);
        expect(JSON.stringify(expected)).toBe(JSON.stringify(actual));
    });

    it('should return sum of 10 with array [1, 2, 3, 5, 8, 13]', function(){
        expect(solution.sumOfEven([1, 2, 3, 5, 8, 13])).toBe(10);
    });

    it('should return sum of the even numbered Fibonacci under 4000000', function(){
        expect(solution.sumOfEvenFibonacci(4000000)).toBe(4613732);
    });
});